@using TriviaApp.UI.Model.TriviaQuestion.Question
@using TriviaApp.UI.Service.Utility

<div class="@(Hide ? "d-none" : "") d-flex justify-content-center">
    @if (Question is QuestionMultipleChoiceViewModel)
    {
        var questionMultipleChoice = Question as QuestionMultipleChoiceViewModel;

        @if (questionMultipleChoice != null)
        {
            <div class="card rounded-3 @(IsCorrect.HasValue ? IsCorrect.Value ? "bg-success" : "bg-danger" : "")" style="width: 40rem;">
                <div class="card-body">
                    <h5 class="card-title fs-4">@Question.Text</h5>
                    <h6 class="card-subtitle mb-4 text-muted">@Question.Number out of @TotalQuestions</h6>
                    <p class="card-text fs-5">
                        <EditForm Model=Question>
                            <InputRadioGroup Name="@questionMultipleChoice.Number.ToString()" @bind-Value=SelectedAnswer>
                                @foreach (var choice in questionMultipleChoice.Choices)
                                {
                                    var letter = NumberToLetterUtility.ConvertToLetter(questionMultipleChoice.Choices.IndexOf(choice) + 1);
                                    var choiceLineText = $"{letter}. {choice}";

                                    <div class="mb-2">
                                        <InputRadio Name=@questionMultipleChoice.Number.ToString() Value=choice /> @choiceLineText
                                        <br />
                                    </div>
                                }
                            </InputRadioGroup>
                        </EditForm>
                    </p>
                </div>
            </div>
        }
    }
</div>

<div class="d-flex justify-content-center">
    <div class="mt-4 @(ShowNextButton ? "" : "d-none")">
        <button type="button" class="btn btn-primary btn-lg" @onclick=OnNextClick>
            Next
        </button>
    </div>

    <div class="me-2 mt-4">
        <button type="button" 
                class="btn btn-primary btn-lg @(ShowNextButton ? "d-none" : "") @(string.IsNullOrEmpty(SelectedAnswer) ? "disabled" : "")" 
                @onclick=OnSubmitClick>
            Submit
        </button>
    </div>
</div>