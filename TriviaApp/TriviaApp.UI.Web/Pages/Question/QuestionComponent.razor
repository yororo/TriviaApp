@using TriviaApp.UI.Model.TriviaQuestion.Question
@using TriviaApp.UI.Service.Utility

<div class="@(Hide ? "d-none" : "")">
    @if (Question is QuestionMultipleChoice)
    {
        var questionMultipleChoice = Question as QuestionMultipleChoice;

        @if (questionMultipleChoice != null)
        {
            <div class="card rounded-3" style="width: 30rem;">
                <div class="card-body">
                    <h5 class="card-title fs-4">@Question.Text</h5>
                    <h6 class="card-subtitle mb-4 text-muted">@Question.Number out of @Question.Number</h6>
                    <p class="card-text fs-5">
                        @foreach (var choice in questionMultipleChoice.Choices)
                        {
                            var letter = NumberToLetterUtility.ConvertToLetter(questionMultipleChoice.Choices.IndexOf(choice) + 1);
                            var choiceLineText = $"{letter}. {choice}";

                            <div class="mb-2">
                                <input type="radio" id=@choice name="@questionMultipleChoice.Number" value=@choice @onchange=OnSelectionChange>
                                <label for=@choice>@choiceLineText</label>
                                <br />
                            </div>
                        }

                        <div class="d-flex flex-row-reverse">
                            <button type="button" class="btn btn-primary mt-4" @onclick=OnSubmitClick >
                                Submit
                            </button>
                        </div>
                    </p>
                </div>
            </div>
        }
    }
</div>